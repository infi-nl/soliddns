buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'

group = 'nl.infi.soliddns'
version = '0.0.1'
sourceCompatibility = 1.8

ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '4.12.3'
ext.junitPlatformVersion = '1.0.3'
ext.junitJupiterVersion  = '5.0.3'
ext.log4jVersion         = '2.9.0'


repositories {
	mavenCentral()
	jcenter()
}

junitPlatform {
	platformVersion '1.0.3'
	filters {
		tags {
			// include 'fast'
			exclude 'slow'
		}
	}
	logManager 'org.apache.logging.log4j.jul.LogManager'
}

dependencies {
	testCompile "org.mockito:mockito-core:2.16.0"

	// JUnit Jupiter API and TestEngine implementation
	testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
	// To avoid compiler warnings about @API annotations in JUnit code
	testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
	// To use Log4J's LogManager
	testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
	// Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
	testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")


	compile project(':core')
	compile group: 'com.opencsv', name: 'opencsv', version:'4.0'
	compile group: 'com.google.guava', name: 'guava', version: '23.0'
}

